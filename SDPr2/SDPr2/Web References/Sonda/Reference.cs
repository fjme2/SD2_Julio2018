//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace SDPr2.Sonda {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SondaSoap11Binding", Namespace="http://master")]
    public partial class Sonda : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback EscribirLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback setDatosOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNombreOperationCompleted;
        
        private System.Threading.SendOrPostCallback modificarTemperaturaOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFechaOperationCompleted;
        
        private System.Threading.SendOrPostCallback valorTempOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTipoOperationCompleted;
        
        private System.Threading.SendOrPostCallback encryptOperationCompleted;
        
        private System.Threading.SendOrPostCallback activarActuadorOperationCompleted;
        
        private System.Threading.SendOrPostCallback setValorOperationCompleted;
        
        private System.Threading.SendOrPostCallback leerArchivoOperationCompleted;
        
        private System.Threading.SendOrPostCallback decryptOperationCompleted;
        
        private System.Threading.SendOrPostCallback modificarHumedadOperationCompleted;
        
        private System.Threading.SendOrPostCallback valorHumOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Sonda() {
            this.Url = global::SDPr2.Properties.Settings.Default.SDPr2_Sonda_Sonda;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event EscribirLogCompletedEventHandler EscribirLogCompleted;
        
        /// <remarks/>
        public event setDatosCompletedEventHandler setDatosCompleted;
        
        /// <remarks/>
        public event getNombreCompletedEventHandler getNombreCompleted;
        
        /// <remarks/>
        public event modificarTemperaturaCompletedEventHandler modificarTemperaturaCompleted;
        
        /// <remarks/>
        public event getFechaCompletedEventHandler getFechaCompleted;
        
        /// <remarks/>
        public event valorTempCompletedEventHandler valorTempCompleted;
        
        /// <remarks/>
        public event getTipoCompletedEventHandler getTipoCompleted;
        
        /// <remarks/>
        public event encryptCompletedEventHandler encryptCompleted;
        
        /// <remarks/>
        public event activarActuadorCompletedEventHandler activarActuadorCompleted;
        
        /// <remarks/>
        public event setValorCompletedEventHandler setValorCompleted;
        
        /// <remarks/>
        public event leerArchivoCompletedEventHandler leerArchivoCompleted;
        
        /// <remarks/>
        public event decryptCompletedEventHandler decryptCompleted;
        
        /// <remarks/>
        public event modificarHumedadCompletedEventHandler modificarHumedadCompleted;
        
        /// <remarks/>
        public event valorHumCompletedEventHandler valorHumCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:EscribirLog", RequestNamespace="http://master", OneWay=true, Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EscribirLog([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string datos, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string usu) {
            this.Invoke("EscribirLog", new object[] {
                        datos,
                        usu});
        }
        
        /// <remarks/>
        public void EscribirLogAsync(string datos, string usu) {
            this.EscribirLogAsync(datos, usu, null);
        }
        
        /// <remarks/>
        public void EscribirLogAsync(string datos, string usu, object userState) {
            if ((this.EscribirLogOperationCompleted == null)) {
                this.EscribirLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEscribirLogOperationCompleted);
            }
            this.InvokeAsync("EscribirLog", new object[] {
                        datos,
                        usu}, this.EscribirLogOperationCompleted, userState);
        }
        
        private void OnEscribirLogOperationCompleted(object arg) {
            if ((this.EscribirLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EscribirLogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:setDatos", RequestNamespace="http://master", OneWay=true, Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setDatos() {
            this.Invoke("setDatos", new object[0]);
        }
        
        /// <remarks/>
        public void setDatosAsync() {
            this.setDatosAsync(null);
        }
        
        /// <remarks/>
        public void setDatosAsync(object userState) {
            if ((this.setDatosOperationCompleted == null)) {
                this.setDatosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetDatosOperationCompleted);
            }
            this.InvokeAsync("setDatos", new object[0], this.setDatosOperationCompleted, userState);
        }
        
        private void OnsetDatosOperationCompleted(object arg) {
            if ((this.setDatosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setDatosCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getNombre", RequestNamespace="http://master", ResponseNamespace="http://master", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string getNombre() {
            object[] results = this.Invoke("getNombre", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getNombreAsync() {
            this.getNombreAsync(null);
        }
        
        /// <remarks/>
        public void getNombreAsync(object userState) {
            if ((this.getNombreOperationCompleted == null)) {
                this.getNombreOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNombreOperationCompleted);
            }
            this.InvokeAsync("getNombre", new object[0], this.getNombreOperationCompleted, userState);
        }
        
        private void OngetNombreOperationCompleted(object arg) {
            if ((this.getNombreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNombreCompleted(this, new getNombreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:modificarTemperatura", RequestNamespace="http://master", ResponseNamespace="http://master", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void modificarTemperatura(int temperatura, [System.Xml.Serialization.XmlIgnoreAttribute()] bool temperaturaSpecified, out int @return, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified) {
            object[] results = this.Invoke("modificarTemperatura", new object[] {
                        temperatura,
                        temperaturaSpecified});
            @return = ((int)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void modificarTemperaturaAsync(int temperatura, bool temperaturaSpecified) {
            this.modificarTemperaturaAsync(temperatura, temperaturaSpecified, null);
        }
        
        /// <remarks/>
        public void modificarTemperaturaAsync(int temperatura, bool temperaturaSpecified, object userState) {
            if ((this.modificarTemperaturaOperationCompleted == null)) {
                this.modificarTemperaturaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodificarTemperaturaOperationCompleted);
            }
            this.InvokeAsync("modificarTemperatura", new object[] {
                        temperatura,
                        temperaturaSpecified}, this.modificarTemperaturaOperationCompleted, userState);
        }
        
        private void OnmodificarTemperaturaOperationCompleted(object arg) {
            if ((this.modificarTemperaturaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modificarTemperaturaCompleted(this, new modificarTemperaturaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getFecha", RequestNamespace="http://master", ResponseNamespace="http://master", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string getFecha() {
            object[] results = this.Invoke("getFecha", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getFechaAsync() {
            this.getFechaAsync(null);
        }
        
        /// <remarks/>
        public void getFechaAsync(object userState) {
            if ((this.getFechaOperationCompleted == null)) {
                this.getFechaOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFechaOperationCompleted);
            }
            this.InvokeAsync("getFecha", new object[0], this.getFechaOperationCompleted, userState);
        }
        
        private void OngetFechaOperationCompleted(object arg) {
            if ((this.getFechaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFechaCompleted(this, new getFechaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:valorTemp", RequestNamespace="http://master", ResponseNamespace="http://master", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string valorTemp() {
            object[] results = this.Invoke("valorTemp", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void valorTempAsync() {
            this.valorTempAsync(null);
        }
        
        /// <remarks/>
        public void valorTempAsync(object userState) {
            if ((this.valorTempOperationCompleted == null)) {
                this.valorTempOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvalorTempOperationCompleted);
            }
            this.InvokeAsync("valorTemp", new object[0], this.valorTempOperationCompleted, userState);
        }
        
        private void OnvalorTempOperationCompleted(object arg) {
            if ((this.valorTempCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.valorTempCompleted(this, new valorTempCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getTipo", RequestNamespace="http://master", ResponseNamespace="http://master", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string getTipo() {
            object[] results = this.Invoke("getTipo", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTipoAsync() {
            this.getTipoAsync(null);
        }
        
        /// <remarks/>
        public void getTipoAsync(object userState) {
            if ((this.getTipoOperationCompleted == null)) {
                this.getTipoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTipoOperationCompleted);
            }
            this.InvokeAsync("getTipo", new object[0], this.getTipoOperationCompleted, userState);
        }
        
        private void OngetTipoOperationCompleted(object arg) {
            if ((this.getTipoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTipoCompleted(this, new getTipoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:encrypt", RequestNamespace="http://master", ResponseNamespace="http://master", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", DataType="base64Binary", IsNullable=true)]
        public byte[] encrypt([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] plainText, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] key, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] args2) {
            object[] results = this.Invoke("encrypt", new object[] {
                        plainText,
                        key,
                        args2});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void encryptAsync(byte[] plainText, byte[] key, byte[] args2) {
            this.encryptAsync(plainText, key, args2, null);
        }
        
        /// <remarks/>
        public void encryptAsync(byte[] plainText, byte[] key, byte[] args2, object userState) {
            if ((this.encryptOperationCompleted == null)) {
                this.encryptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnencryptOperationCompleted);
            }
            this.InvokeAsync("encrypt", new object[] {
                        plainText,
                        key,
                        args2}, this.encryptOperationCompleted, userState);
        }
        
        private void OnencryptOperationCompleted(object arg) {
            if ((this.encryptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.encryptCompleted(this, new encryptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:activarActuador", RequestNamespace="http://master", ResponseNamespace="http://master", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string activarActuador([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nombre) {
            object[] results = this.Invoke("activarActuador", new object[] {
                        nombre});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void activarActuadorAsync(string nombre) {
            this.activarActuadorAsync(nombre, null);
        }
        
        /// <remarks/>
        public void activarActuadorAsync(string nombre, object userState) {
            if ((this.activarActuadorOperationCompleted == null)) {
                this.activarActuadorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnactivarActuadorOperationCompleted);
            }
            this.InvokeAsync("activarActuador", new object[] {
                        nombre}, this.activarActuadorOperationCompleted, userState);
        }
        
        private void OnactivarActuadorOperationCompleted(object arg) {
            if ((this.activarActuadorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.activarActuadorCompleted(this, new activarActuadorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:setValor", RequestNamespace="http://master", OneWay=true, Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setValor(int valor, [System.Xml.Serialization.XmlIgnoreAttribute()] bool valorSpecified) {
            this.Invoke("setValor", new object[] {
                        valor,
                        valorSpecified});
        }
        
        /// <remarks/>
        public void setValorAsync(int valor, bool valorSpecified) {
            this.setValorAsync(valor, valorSpecified, null);
        }
        
        /// <remarks/>
        public void setValorAsync(int valor, bool valorSpecified, object userState) {
            if ((this.setValorOperationCompleted == null)) {
                this.setValorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetValorOperationCompleted);
            }
            this.InvokeAsync("setValor", new object[] {
                        valor,
                        valorSpecified}, this.setValorOperationCompleted, userState);
        }
        
        private void OnsetValorOperationCompleted(object arg) {
            if ((this.setValorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setValorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:leerArchivo", RequestNamespace="http://master", OneWay=true, Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void leerArchivo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string s) {
            this.Invoke("leerArchivo", new object[] {
                        s});
        }
        
        /// <remarks/>
        public void leerArchivoAsync(string s) {
            this.leerArchivoAsync(s, null);
        }
        
        /// <remarks/>
        public void leerArchivoAsync(string s, object userState) {
            if ((this.leerArchivoOperationCompleted == null)) {
                this.leerArchivoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnleerArchivoOperationCompleted);
            }
            this.InvokeAsync("leerArchivo", new object[] {
                        s}, this.leerArchivoOperationCompleted, userState);
        }
        
        private void OnleerArchivoOperationCompleted(object arg) {
            if ((this.leerArchivoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.leerArchivoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:decrypt", RequestNamespace="http://master", ResponseNamespace="http://master", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", DataType="base64Binary", IsNullable=true)]
        public byte[] decrypt([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] encryptedText, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] key, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] args2) {
            object[] results = this.Invoke("decrypt", new object[] {
                        encryptedText,
                        key,
                        args2});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void decryptAsync(byte[] encryptedText, byte[] key, byte[] args2) {
            this.decryptAsync(encryptedText, key, args2, null);
        }
        
        /// <remarks/>
        public void decryptAsync(byte[] encryptedText, byte[] key, byte[] args2, object userState) {
            if ((this.decryptOperationCompleted == null)) {
                this.decryptOperationCompleted = new System.Threading.SendOrPostCallback(this.OndecryptOperationCompleted);
            }
            this.InvokeAsync("decrypt", new object[] {
                        encryptedText,
                        key,
                        args2}, this.decryptOperationCompleted, userState);
        }
        
        private void OndecryptOperationCompleted(object arg) {
            if ((this.decryptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.decryptCompleted(this, new decryptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:modificarHumedad", RequestNamespace="http://master", ResponseNamespace="http://master", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void modificarHumedad(int humedad, [System.Xml.Serialization.XmlIgnoreAttribute()] bool humedadSpecified, out int @return, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified) {
            object[] results = this.Invoke("modificarHumedad", new object[] {
                        humedad,
                        humedadSpecified});
            @return = ((int)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void modificarHumedadAsync(int humedad, bool humedadSpecified) {
            this.modificarHumedadAsync(humedad, humedadSpecified, null);
        }
        
        /// <remarks/>
        public void modificarHumedadAsync(int humedad, bool humedadSpecified, object userState) {
            if ((this.modificarHumedadOperationCompleted == null)) {
                this.modificarHumedadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodificarHumedadOperationCompleted);
            }
            this.InvokeAsync("modificarHumedad", new object[] {
                        humedad,
                        humedadSpecified}, this.modificarHumedadOperationCompleted, userState);
        }
        
        private void OnmodificarHumedadOperationCompleted(object arg) {
            if ((this.modificarHumedadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modificarHumedadCompleted(this, new modificarHumedadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:valorHum", RequestNamespace="http://master", ResponseNamespace="http://master", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string valorHum() {
            object[] results = this.Invoke("valorHum", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void valorHumAsync() {
            this.valorHumAsync(null);
        }
        
        /// <remarks/>
        public void valorHumAsync(object userState) {
            if ((this.valorHumOperationCompleted == null)) {
                this.valorHumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvalorHumOperationCompleted);
            }
            this.InvokeAsync("valorHum", new object[0], this.valorHumOperationCompleted, userState);
        }
        
        private void OnvalorHumOperationCompleted(object arg) {
            if ((this.valorHumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.valorHumCompleted(this, new valorHumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void EscribirLogCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void setDatosCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getNombreCompletedEventHandler(object sender, getNombreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNombreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNombreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void modificarTemperaturaCompletedEventHandler(object sender, modificarTemperaturaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class modificarTemperaturaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal modificarTemperaturaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int @return {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool returnSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getFechaCompletedEventHandler(object sender, getFechaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFechaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFechaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void valorTempCompletedEventHandler(object sender, valorTempCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class valorTempCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal valorTempCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void getTipoCompletedEventHandler(object sender, getTipoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTipoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTipoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void encryptCompletedEventHandler(object sender, encryptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class encryptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal encryptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void activarActuadorCompletedEventHandler(object sender, activarActuadorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class activarActuadorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal activarActuadorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void setValorCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void leerArchivoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void decryptCompletedEventHandler(object sender, decryptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class decryptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal decryptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void modificarHumedadCompletedEventHandler(object sender, modificarHumedadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class modificarHumedadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal modificarHumedadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int @return {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool returnSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void valorHumCompletedEventHandler(object sender, valorHumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class valorHumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal valorHumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591